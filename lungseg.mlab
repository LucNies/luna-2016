// MDL v1 utf8
network  {
  watchlist = ""
}
module RunPythonScript {
  internal  {
    frame = "1025 389 128 56"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "-901 145 824 542"
        sizeHint = "629 542"
        wasOpen = yes
      }
      window _automatic {
        geometry = "1035 272 500 600"
        sizeHint = "256 192"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = RunPythonScript
    in0 = ""
    in1 = ""
    in2 = ""
    in3 = ""
    in4 = ""
    in5 = ""
    in6 = ""
    in7 = ""
    in8 = ""
    in9 = ""
    editComments = FALSE
    inComment0 = in0
    inComment1 = in1
    inComment2 = in2
    inComment3 = in3
    inComment4 = in4
    inComment5 = in5
    inComment6 = in6
    inComment7 = in7
    inComment8 = in8
    inComment9 = in9
    autoApply0 = TRUE
    autoApply1 = TRUE
    autoApply2 = TRUE
    autoApply3 = TRUE
    autoApply4 = TRUE
    autoApply5 = TRUE
    autoApply6 = TRUE
    autoApply7 = TRUE
    autoApply8 = TRUE
    autoApply9 = TRUE
    out0 = ""
    out1 = ""
    out2 = ""
    out3 = ""
    out4 = ""
    out5 = ""
    out6 = ""
    out7 = ""
    out8 = ""
    out9 = ""
    outComment0 = out0
    outComment1 = out1
    outComment2 = out2
    outComment3 = out3
    outComment4 = out4
    outComment5 = out5
    outComment6 = out6
    outComment7 = out7
    outComment8 = out8
    outComment9 = out9
    initCode = "*# Initialize global variables and functions
global CTX
# Use this to access the network context
CTX=ctx.owner().owner()

#Say you want to automatically load a list of images with their paths 
#listed in a file (e.g. images.txt) then you first need to load 
#them on a list:

im_path = "I:/mevisnak/data/"
pred_path = "I:/mevisnak/predictions/"

names = []
listFile = open("I:/mevisnak/names.txt")
for f in listFile:
  names.append(f[:-1])
listFile.close()

index= 0
print "initiation done"*"
    wakeUpCode = ""
    code = "*if index<len(names):
	s = im_path + names[index]
	CTX.field("itkImageFileReader.unresolvedFileName").value = s  #to fill the file path
	CTX.field("itkImageFileReader.open").touch()						     #to press the load button
	
	s = pred_path + names[index]
	CTX.field("itkImageFileWriter.unresolvedFileName").value = s  #to fill the file path
	CTX.field("itkImageFileWriter.save").touch()

	CTX.field("itkImageFileReader.close").touch()	
	# ... here you segment the lung and save your mask.... if you have any module that needs the update button to be pressed you should either
	# make it auto update or use CTX.field("Blah.update").touch() to trigger it.
	print index
	index += 1
else:
	print "done"			#now you have processed all your images, turn off the auto trigger
	CTX.field("IdleTrigger.on").value = False

# the reason that I propose to implement a for loop over subjects with this structure is because this way you can stop the process by unchecking
# the 'on' button in the 'IdleTrigger' module, while you have to kill mevislab if you want to stop a normal for loop.*"
    showFields = FALSE
    showInitCode = TRUE
    showWakeUpCode = FALSE
    showCode = TRUE
    showConsole = FALSE
  }
}
module IdleTrigger {
  internal  {
    frame = "1029 453 88 56"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "1271 278 249 62"
        sizeHint = "249 62"
        wasOpen = yes
      }
      window _automatic {
        geometry = "407 259 500 600"
        sizeHint = "256 192"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = IdleTrigger
    minIntermediateTime = 10
    on = FALSE
  }
}
module ConnectedComponents {
  internal  {
    frame = "489 253 160 56"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "1211 377 602 416"
        sizeHint = "471 416"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = ConnectedComponents
    autoUpdate = TRUE
    useAdditionalSeed = FALSE
    additionalSeed = "0 0 0 0 0 0"
    additionalSeedType = 0
    additionalSeedCoordSystem = VoxelCoordinates
    clusterMode = IdenticalIntensities
    similarityToleranceIntensities = 0
    similarityToleranceVectors = 0.98
    clusterArraySizeHint = 300000
    fillValue = 0
    originalObject = FALSE
    objectValue = 255
    minClusterSize = 0
    clusterSizeInterpretation = ml
    invertClusterSelection = FALSE
    inputIgnoreValue = -1024
    neighborhoodType = NBH_3D_18_XYZ
    useMask = FALSE
  }
}
module itkImageFileWriter {
  internal  {
    frame = "505 13 128 56"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "1159 333 307 403"
        sizeHint = "256 403"
        wasOpen = yes
      }
    }
  }
  fields  {
    instanceName = itkImageFileWriter
    useCompression = FALSE
    correctSubVoxelShift = FALSE
    forceDirectionCosineWrite = TRUE
    outputVoxelType = Automatic
    info = ""
    unresolvedFileName = $(NETWORK)/predictions/1.3.6.1.4.1.14519.5.2.1.6279.6001.100398138793540579077826395208.mh
  }
}
module Morphology {
  internal  {
    frame = "517 93 104 56"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "308 172 293 497"
        sizeHint = "293 497"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = Morphology1
    borderHandling = PadSrcClamp
    fillValue = 0
    referenceExtentMode = Overlap
    filterMode = Erosion
    kernelX = 10
    kernelY = 10
    kernelZ = 1
    kernelC = 1
    kernelT = 1
    kernelU = 1
    makeSpherical = TRUE
    intervalMinOfFilteredVoxels = 0
    intervalMaxOfFilteredVoxels = 1024
    useIntervalOfFilteredVoxels = FALSE
    intervalMinOfVoxelsForFiltering = 0
    intervalMaxOfVoxelsForFiltering = 1024
    useIntervalOfVoxelsForFiltering = FALSE
    externalKernel = ""
    useExternalKernel = FALSE
    kernelInfo = "circular, 80 elems, 10x10x1x1x1x1"
    numKernelElements = 80
    kernelElementsSum = 0
  }
}
module Morphology {
  internal  {
    frame = "521 173 96 56"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "64 160 293 497"
        sizeHint = "293 497"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = Morphology
    borderHandling = PadSrcClamp
    fillValue = 0
    referenceExtentMode = Overlap
    filterMode = Dilation
    kernelX = 10
    kernelY = 10
    kernelZ = 1
    kernelC = 1
    kernelT = 1
    kernelU = 1
    makeSpherical = TRUE
    intervalMinOfFilteredVoxels = 0
    intervalMaxOfFilteredVoxels = 1024
    useIntervalOfFilteredVoxels = FALSE
    intervalMinOfVoxelsForFiltering = 0
    intervalMaxOfVoxelsForFiltering = 1024
    useIntervalOfVoxelsForFiltering = FALSE
    externalKernel = ""
    useExternalKernel = FALSE
    kernelInfo = "circular, 80 elems, 10x10x1x1x1x1"
    numKernelElements = 80
    kernelElementsSum = 0
  }
}
module Arithmetic1 {
  internal  {
    frame = "517 325 104 56"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "688 448 240 64"
        sizeHint = "238 64"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = Arithmetic11
    function = Invert
    constant = 0
  }
}
module Threshold {
  internal  {
    frame = "521 397 96 56"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "1167 422 260 63"
        sizeHint = "260 63"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = Threshold2
    threshold = 1000
    minValue = -1024
    maxValue = 8215
    relativeThreshold = FALSE
  }
}
module Arithmetic2 {
  internal  {
    frame = "517 477 104 56"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "860 537 217 64"
        sizeHint = "215 64"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = Arithmetic26
    function = Add
    constant = 0
    autoReplicate = FALSE
  }
}
module Threshold {
  internal  {
    frame = "617 549 96 56"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "1167 422 260 63"
        sizeHint = "260 63"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = Threshold1
    threshold = 1000
    minValue = 0
    maxValue = 6572
    relativeThreshold = FALSE
  }
}
module Arithmetic2 {
  internal  {
    frame = "757 693 104 56"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "860 537 217 64"
        sizeHint = "215 64"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = Arithmetic25
    function = Add
    constant = 0
    autoReplicate = FALSE
  }
}
module Arithmetic2 {
  internal  {
    frame = "613 621 104 56"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "860 537 217 64"
        sizeHint = "215 64"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = Arithmetic24
    function = Add
    constant = 0
    autoReplicate = FALSE
  }
}
module Arithmetic2 {
  internal  {
    frame = "469 685 104 56"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "860 537 217 64"
        sizeHint = "215 64"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = Arithmetic23
    function = Add
    constant = 0
    autoReplicate = FALSE
  }
}
module RegionGrowing {
  internal  {
    frame = "673 781 128 56"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "109 446 573 583"
        sizeHint = "573 583"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = RegionGrowing3
    autoUpdateMode = AutoUpdate
    lowerThreshold = -1157.35
    upperThreshold = -890.65
    autoThreshold = TRUE
    basicNeighborhoodType = BNBH_2D_4_XY
    extendedNeighborhoodType = ENBH_3D_6_XYZ
    useAdditionalSeed = TRUE
    additionalSeed = "511 1 1 0 0 0"
    additionalSeedType = 1
    additionalSeedCoordSystem = VoxelCoordinates
    initStackSizeTweak = 0.100000001490116
    prohibitInputScalingTweak = FALSE
    incrementalUpdateMode = Smart
    useExtendedNBH = TRUE
    calcBoundaryOverlap = FALSE
    unitType = UnitTypeGrayValue
    internalAccuracy = Auto
    autoUpdateUnitType = FALSE
    stretchOutputOverTime = FALSE
    unitLabel = ""
    showPartialResults = FALSE
    acceptedMarkerType = -1
    autoSelectHigherCoords = TRUE
    cCoord = 0
    uCoord = 0
    posFillValue = -1
    negFillValue = 0
    invertResult = FALSE
    showOuterBoundariesOnly = FALSE
    maxVolume = 100
    maxVolumeEnabled = FALSE
    intervalSize = 5
  }
}
module RegionGrowing {
  internal  {
    frame = "809 773 128 56"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "109 446 573 583"
        sizeHint = "573 583"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = RegionGrowing2
    autoUpdateMode = AutoUpdate
    lowerThreshold = -1157.35
    upperThreshold = -890.65
    autoThreshold = TRUE
    basicNeighborhoodType = BNBH_2D_4_XY
    extendedNeighborhoodType = ENBH_3D_6_XYZ
    useAdditionalSeed = TRUE
    additionalSeed = "510 510 1 0 0 0"
    additionalSeedType = 1
    additionalSeedCoordSystem = VoxelCoordinates
    initStackSizeTweak = 0.100000001490116
    prohibitInputScalingTweak = FALSE
    incrementalUpdateMode = Smart
    useExtendedNBH = TRUE
    calcBoundaryOverlap = FALSE
    unitType = UnitTypeGrayValue
    internalAccuracy = Auto
    autoUpdateUnitType = FALSE
    stretchOutputOverTime = FALSE
    unitLabel = ""
    showPartialResults = FALSE
    acceptedMarkerType = -1
    autoSelectHigherCoords = TRUE
    cCoord = 0
    uCoord = 0
    posFillValue = -1
    negFillValue = 0
    invertResult = FALSE
    showOuterBoundariesOnly = FALSE
    maxVolume = 100
    maxVolumeEnabled = FALSE
    intervalSize = 5
  }
}
module RegionGrowing {
  internal  {
    frame = "537 781 128 56"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "109 446 573 583"
        sizeHint = "573 583"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = RegionGrowing1
    autoUpdateMode = AutoUpdate
    lowerThreshold = -1157.35
    upperThreshold = -890.65
    autoThreshold = TRUE
    basicNeighborhoodType = BNBH_2D_4_XY
    extendedNeighborhoodType = ENBH_3D_6_XYZ
    useAdditionalSeed = TRUE
    additionalSeed = "1 510 1 0 0 0"
    additionalSeedType = 1
    additionalSeedCoordSystem = VoxelCoordinates
    initStackSizeTweak = 0.100000001490116
    prohibitInputScalingTweak = FALSE
    incrementalUpdateMode = Smart
    useExtendedNBH = TRUE
    calcBoundaryOverlap = FALSE
    unitType = UnitTypeGrayValue
    internalAccuracy = Auto
    autoUpdateUnitType = FALSE
    stretchOutputOverTime = FALSE
    unitLabel = ""
    showPartialResults = FALSE
    acceptedMarkerType = -1
    autoSelectHigherCoords = TRUE
    cCoord = 0
    uCoord = 0
    posFillValue = -1
    negFillValue = 0
    invertResult = FALSE
    showOuterBoundariesOnly = FALSE
    maxVolume = 100
    maxVolumeEnabled = FALSE
    intervalSize = 5
  }
}
module RegionGrowing {
  internal  {
    frame = "405 781 120 56"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "183 392 573 583"
        sizeHint = "573 583"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = RegionGrowing
    autoUpdateMode = AutoUpdate
    lowerThreshold = -1157.35
    upperThreshold = -890.65
    autoThreshold = TRUE
    basicNeighborhoodType = BNBH_2D_4_XY
    extendedNeighborhoodType = ENBH_3D_6_XYZ
    useAdditionalSeed = TRUE
    additionalSeed = "1 1 1 0 0 0"
    additionalSeedType = 1
    additionalSeedCoordSystem = VoxelCoordinates
    initStackSizeTweak = 0.100000001490116
    prohibitInputScalingTweak = FALSE
    incrementalUpdateMode = Smart
    useExtendedNBH = TRUE
    calcBoundaryOverlap = FALSE
    unitType = UnitTypeGrayValue
    internalAccuracy = Auto
    autoUpdateUnitType = FALSE
    stretchOutputOverTime = FALSE
    unitLabel = ""
    showPartialResults = FALSE
    acceptedMarkerType = -1
    autoSelectHigherCoords = TRUE
    cCoord = 0
    uCoord = 0
    posFillValue = -1
    negFillValue = 0
    invertResult = FALSE
    showOuterBoundariesOnly = FALSE
    maxVolume = 100
    maxVolumeEnabled = FALSE
    intervalSize = 5
  }
}
module Threshold {
  internal  {
    frame = "605 901 88 56"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "905 359 260 63"
        sizeHint = "260 63"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = Threshold
    threshold = -350
    minValue = -1024
    maxValue = 1643
    relativeThreshold = FALSE
  }
}
module itkImageFileReader {
  internal  {
    frame = "589 981 136 56"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "57 372 299 395"
        sizeHint = "299 395"
        wasOpen = yes
      }
    }
  }
  fields  {
    instanceName = itkImageFileReader
    fileDataType = int16
    correctSubVoxelShift = FALSE
    fileDimension = 3
    info = "Loading okay."
    numDims = 3
    fileType = Binary
    componentType = int16
    pixelType = SCALAR
    loaderType = MetaImageIO
    outputMetaDataStr = "ITK_InputFilterName : MetaImageIO
"
    unresolvedFileName = $(NETWORK)/data/1.3.6.1.4.1.14519.5.2.1.6279.6001.100398138793540579077826395208.mhd
  }
}
connections  {
  RunPythonScript.execute = IdleTrigger.triggerOutput
  ConnectedComponents.input0 = Arithmetic11.output0
  itkImageFileWriter.input0 = Morphology1.output0
  Morphology1.input0 = Morphology.output0
  Morphology1.kernelX = Morphology.kernelX
  Morphology1.kernelY = Morphology.kernelX
  Morphology.input0 = ConnectedComponents.output2
  Morphology.kernelY = Morphology.kernelX
  Arithmetic11.input0 = Threshold2.output0
  Threshold2.input0 = Arithmetic26.output0
  Arithmetic26.input0 = Threshold.output0
  Arithmetic26.input1 = Threshold1.output0
  Threshold1.input0 = Arithmetic24.output0
  Arithmetic25.input0 = RegionGrowing3.output0
  Arithmetic25.input1 = RegionGrowing2.output0
  Arithmetic24.input0 = Arithmetic23.output0
  Arithmetic24.input1 = Arithmetic25.output0
  Arithmetic23.input0 = RegionGrowing.output0
  Arithmetic23.input1 = RegionGrowing1.output0
  RegionGrowing3.input0 = Threshold.output0
  RegionGrowing2.input0 = Threshold.output0
  RegionGrowing1.input0 = Threshold.output0
  RegionGrowing.input0 = Threshold.output0
  Threshold.input0 = itkImageFileReader.output0
}
networkModel = ""
